name: Tests
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    continue-on-error: ${{ matrix.python-version == '' }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        run: echo version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))") >> $GITHUB_OUTPUT

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Load cached venv
        id: cached-uv-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-monaco-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/uv.lock') }}

      - name: Install dependencies
        run: uv sync --all-extras --group dev

      - name: Run tests and coverage
        run: |
          uv run coverage run --source=monaco --parallel-mode -m pytest
          uv run coverage combine --quiet
          uv run coverage report -m
          uv run coverage xml
          uv run coverage html
        env:
          MPLBACKEND: Agg
          QT_QPA_PLATFORM: offscreen

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'Ubuntu' && matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/uv.lock') }}
          path: htmlcov
